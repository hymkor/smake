(defun _split-sequence (_sep str)
  (let ((result nil)
        (index nil)
        (sep (create-string 1 _sep)))
    (while (setq index (string-index sep str))
      (setq result (cons (subseq str 0 index) result))
      (setq str (subseq str (1+ index) (length str)))
      )
    (setq result (cons str result))
    (format t "~s~%" result)
    (nreverse result)))

(let*
  ((EXE (if (equal (getenv "OS") "Windows_NT") ".exe" ""))
   (NAME (notdir (abspath ".")))
   (AOUT (string-append NAME EXE))
   (SOURCE (wildcard "*.go"))
   )
  (make $1
    ((cons AOUT SOURCE)
     (sh "go fmt")
     (sh "go build")
     )
    ('("get")
     (sh "go get -u")
     (sh "go get -u github.com/hymkor/gmnlisp@master")
     (sh "go mod tidy")
     )
    ('("update")
     (apply #'touch SOURCE)
     )
    ('("readme" "README.md" "Makefile.lsp")
     )
    ('("README.md" "_README.md" "Makefile.lsp")
       (sh ($ "gmnlpp$(EXE) $< > \"$@\""))
     )
    ('("clean")
     (pushd "examples/cc"
       (x $0 "clean")
       )
      (apply #'rm (wildcard "*~"))
      (if (-e AOUT)
        (mv AOUT (format nil ".~a~~" AOUT))
        )
     )
    ('("install")
     (foreach (path (_split-sequence #\newline (q "where" (notdir $0))))
       (or (equal path $0)
           (cp $0 path)))
     )
    ('("test")
     (x "go" "test")
     )
    ('("package")
     (let ((version (shell "git describe --tag")))
       (foreach (goos '("linux" "windows"))
         (doenv ("GOOS" goos)
           (foreach (goarch '("386" "amd64"))
             (doenv ("GOARCH" goarch)
               (let* ((exe (shell "go env GOEXE"))
                      (aout (string-append NAME exe)))
                 (rm aout)
                 (x "go" "build")
                 (x "zip"
                    (string-append NAME "-" version "-" goos "-" goarch ".zip")
                    aout)
                 )
               )
             )
           )
         )
       )
     ) ; "package"
    ('("clean-zip")
     (apply #'rm (wildcard "*.zip"))
     )
    );make
  );let
; vim:set lispwords+=foreach,env,mapc,make,pushd,while:
